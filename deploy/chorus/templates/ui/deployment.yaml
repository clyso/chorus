{{- if .Values.ui.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chorus.fullname" . }}-ui
  labels:
    app: ui
  {{- include "chorus.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.ui.replicas }}
  selector:
    matchLabels:
      app: ui
    {{- include "chorus.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: ui
      {{- include "chorus.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chorus.serviceAccountName" . }}
      containers:
      - name: ui
        image: {{ .Values.ui.image.repository }}:{{ .Values.ui.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.ui.image.pullPolicy }}
        env:
        - name: BACKEND_URL
          value: {{ printf "http://%s-rest:%d" .Release.Name ( .Values.worker.restApiService.portRest.port | int) | quote }}
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 20
          tcpSocket:
            port: 80
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 80
        resources: {{- toYaml .Values.ui.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
{{- end }}
