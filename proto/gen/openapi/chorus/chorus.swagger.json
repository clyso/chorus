{
  "swagger": "2.0",
  "info": {
    "title": "chorus/chorus.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Chorus"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/agents": {
      "get": {
        "operationId": "Chorus_GetAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetAgentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/consistency/delete": {
      "put": {
        "operationId": "Chorus_DeleteConsistencyCheckReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusConsistencyCheckRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/consistency/list": {
      "get": {
        "operationId": "Chorus_ListConsistencyChecks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusListConsistencyChecksResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/consistency/report": {
      "get": {
        "operationId": "Chorus_GetConsistencyCheckReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetConsistencyCheckReportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/consistency/report-entries": {
      "get": {
        "operationId": "Chorus_GetConsistencyCheckReportEntries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetConsistencyCheckReportEntriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "Cursor",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "PageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/consistency/start": {
      "post": {
        "operationId": "Chorus_StartConsistencyCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusConsistencyCheckRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/proxy": {
      "get": {
        "summary": "Returns connection details for proxy s3 endpoint",
        "operationId": "Chorus_GetProxyCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetProxyCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication": {
      "get": {
        "summary": "Lists configured replications with statuses",
        "operationId": "Chorus_ListReplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusListReplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/add": {
      "post": {
        "summary": "Configures new replication for user or bucket(-s)",
        "operationId": "Chorus_AddReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusAddReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/compare-bucket": {
      "post": {
        "summary": "Compares contents of given bucket in given storages",
        "operationId": "Chorus_CompareBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusCompareBucketResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusCompareBucketRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/delete": {
      "put": {
        "summary": "Deletes given replication",
        "operationId": "Chorus_DeleteReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/get": {
      "post": {
        "operationId": "Chorus_GetReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusReplication"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/list-buckets": {
      "post": {
        "summary": "Returns list of buckets to configure new replication.",
        "operationId": "Chorus_ListBucketsForReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusListBucketsForReplicationResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusListBucketsForReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/pause": {
      "put": {
        "summary": "Pauses given replication",
        "operationId": "Chorus_PauseReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/resume": {
      "put": {
        "summary": "Resumes given replication",
        "operationId": "Chorus_ResumeReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/switch": {
      "post": {
        "operationId": "Chorus_SwitchMainBucket",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusSwitchMainBucketRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/switch-with-downtime": {
      "post": {
        "summary": "Switch main\u003c-\u003efollower for selected replication with downtime.\nThis method Can be used to update existing switch if it has not started yet.\nSwitch with downtime stops write request to bucket on chorus proxy until all replication tasks will be processed.\nThen it checks if main and follower bucket contents are the same, unblocks writes, and routes all requests to follower bucket.\nMethod will return error in following cases:\n  - there is no existing bucket replication\n  - there are multiple replications from the same main bucket to multiple followers\n  - switch is in progress - aka writes already blocked. Use DeleteSwitchWithDowntime in this case.\n  - switch is successfully finished\n  - if downtime window is not set and initial migration is not done\nSwitch status will be shown in Replication status.",
        "operationId": "Chorus_SwitchWithDowntime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusSwitchWithDowntimeRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/switch-with-downtime/delete": {
      "post": {
        "summary": "Deletes Switch if exists and sets old main bucket back as main if switch was already completed.",
        "operationId": "Chorus_DeleteSwitchWithDowntime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/switch-with-downtime/get": {
      "post": {
        "summary": "Returns Switch with donwntime info",
        "operationId": "Chorus_GetSwitchWithDowntime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetSwitchWithDowntimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/user": {
      "get": {
        "operationId": "Chorus_ListUserReplications",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusListUserReplicationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/replication/user/delete": {
      "put": {
        "operationId": "Chorus_DeleteUserReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusDeleteUserReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/storage": {
      "get": {
        "summary": "Lists configured storages with users",
        "operationId": "Chorus_GetStorages",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetStoragesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    },
    "/v2/replication/add": {
      "post": {
        "operationId": "Chorus_AddBucketReplication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chorusAddBucketReplicationRequest"
            }
          }
        ],
        "tags": [
          "Chorus"
        ]
      }
    },
    "/version": {
      "get": {
        "summary": "Get app version",
        "operationId": "Chorus_GetAppVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chorusGetAppVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "tags": [
          "Chorus"
        ]
      }
    }
  },
  "definitions": {
    "ReplicationSwitchEnum": {
      "type": "string",
      "enum": [
        "NotStarted",
        "InProgress",
        "Done"
      ],
      "default": "NotStarted"
    },
    "StorageProvider": {
      "type": "string",
      "enum": [
        "Other",
        "Ceph",
        "Minio",
        "AWS",
        "GCS",
        "Alibaba",
        "Cloudflare",
        "DigitalOcean"
      ],
      "default": "Other"
    },
    "chorusAddBucketReplicationRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string",
          "title": "s3 user alias from chorus config"
        },
        "fromStorage": {
          "type": "string",
          "title": "source storage alias from chorus config"
        },
        "fromBucket": {
          "type": "string",
          "title": "source bucket name"
        },
        "toStorage": {
          "type": "string",
          "description": "destination storage name from chorus config. Can be equal to destination storage if destination bucket name is different from source."
        },
        "toBucket": {
          "type": "string",
          "title": "custom destination bucket name. if not set, destination bucket name will be equal to soruce bucket"
        },
        "agentUrl": {
          "type": "string",
          "description": "webhook URL of chorus agent. Required if chorus agent setup is used."
        }
      }
    },
    "chorusAddReplicationRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "buckets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isForAllBuckets": {
          "type": "boolean"
        },
        "agentUrl": {
          "type": "string"
        },
        "toBucket": {
          "type": "string"
        }
      }
    },
    "chorusAgent": {
      "type": "object",
      "properties": {
        "storage": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "chorusCompareBucketRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "showMatch": {
          "type": "boolean",
          "title": "set true to get list of matching files (match) in response"
        },
        "toBucket": {
          "type": "string"
        }
      }
    },
    "chorusCompareBucketResponse": {
      "type": "object",
      "properties": {
        "isMatch": {
          "type": "boolean",
          "title": "true if storage's buckets have the same content"
        },
        "missFrom": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of missing files in 'from storage' bucket"
        },
        "missTo": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of missing files in 'to storage' bucket"
        },
        "differ": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of files with different content"
        },
        "error": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "list of errors occurred during comparison"
        },
        "match": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "list matched files in storages bucket.\nwill be empty if request parameter show_match set to false."
        }
      }
    },
    "chorusConsistencyCheck": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusMigrateLocation"
          }
        },
        "queued": {
          "type": "string",
          "format": "uint64"
        },
        "completed": {
          "type": "string",
          "format": "uint64"
        },
        "ready": {
          "type": "boolean"
        },
        "consistent": {
          "type": "boolean"
        }
      }
    },
    "chorusConsistencyCheckReportEntry": {
      "type": "object",
      "properties": {
        "object": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "storages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "chorusConsistencyCheckRequest": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusMigrateLocation"
          }
        }
      }
    },
    "chorusCredential": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "accessKey": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        }
      }
    },
    "chorusDeleteUserReplicationRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "deleteBucketReplications": {
          "type": "boolean"
        }
      }
    },
    "chorusGetAgentsResponse": {
      "type": "object",
      "properties": {
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusAgent"
          }
        }
      }
    },
    "chorusGetAppVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "commit": {
          "type": "string"
        },
        "date": {
          "type": "string"
        }
      }
    },
    "chorusGetConsistencyCheckReportEntriesResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusConsistencyCheckReportEntry"
          }
        },
        "Cursor": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "chorusGetConsistencyCheckReportResponse": {
      "type": "object",
      "properties": {
        "check": {
          "$ref": "#/definitions/chorusConsistencyCheck"
        }
      }
    },
    "chorusGetProxyCredentialsResponse": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusCredential"
          }
        }
      }
    },
    "chorusGetStoragesResponse": {
      "type": "object",
      "properties": {
        "storages": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusStorage"
          }
        }
      }
    },
    "chorusGetSwitchWithDowntimeResponse": {
      "type": "object",
      "properties": {
        "lastStatus": {
          "$ref": "#/definitions/chorusGetSwitchWithDowntimeResponseStatus"
        },
        "continueReplication": {
          "type": "boolean"
        },
        "downtimeWindow": {
          "$ref": "#/definitions/chorusSwitchWindow"
        },
        "lastStartedAt": {
          "type": "string",
          "format": "date-time"
        },
        "doneAt": {
          "type": "string",
          "format": "date-time"
        },
        "history": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "chorusGetSwitchWithDowntimeResponseStatus": {
      "type": "string",
      "enum": [
        "NotStarted",
        "InProgress",
        "Done",
        "Error",
        "Skipped"
      ],
      "default": "NotStarted"
    },
    "chorusListBucketsForReplicationRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "showReplicated": {
          "type": "boolean"
        }
      }
    },
    "chorusListBucketsForReplicationResponse": {
      "type": "object",
      "properties": {
        "buckets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicatedBuckets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "chorusListConsistencyChecksResponse": {
      "type": "object",
      "properties": {
        "checks": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusConsistencyCheck"
          }
        }
      }
    },
    "chorusListReplicationsResponse": {
      "type": "object",
      "properties": {
        "replications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusReplication"
          }
        }
      }
    },
    "chorusListUserReplicationsResponse": {
      "type": "object",
      "properties": {
        "replications": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusUserReplication"
          }
        }
      }
    },
    "chorusMigrateLocation": {
      "type": "object",
      "properties": {
        "storage": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "chorusReplication": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "isPaused": {
          "type": "boolean"
        },
        "isInitDone": {
          "type": "boolean"
        },
        "initObjListed": {
          "type": "string",
          "format": "int64"
        },
        "initObjDone": {
          "type": "string",
          "format": "int64"
        },
        "initBytesListed": {
          "type": "string",
          "format": "int64"
        },
        "initBytesDone": {
          "type": "string",
          "format": "int64"
        },
        "events": {
          "type": "string",
          "format": "int64"
        },
        "eventsDone": {
          "type": "string",
          "format": "int64"
        },
        "lastEmittedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastProcessedAt": {
          "type": "string",
          "format": "date-time"
        },
        "agentUrl": {
          "type": "string"
        },
        "switchStatus": {
          "$ref": "#/definitions/ReplicationSwitchEnum"
        },
        "toBucket": {
          "type": "string"
        },
        "initDoneAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "chorusReplicationRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "toBucket": {
          "type": "string"
        }
      }
    },
    "chorusStorage": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "some human-readable alias for storage config"
        },
        "isMain": {
          "type": "boolean"
        },
        "address": {
          "type": "string",
          "title": "ex: s3.clyso.com"
        },
        "provider": {
          "$ref": "#/definitions/StorageProvider",
          "title": "s3 storage provider \u003cCeph|Minio|AWS|Other\u003e"
        },
        "credentials": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/chorusCredential"
          },
          "title": "credentials: access key (public, aka username)"
        }
      }
    },
    "chorusSwitchMainBucketRequest": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "bucket": {
          "type": "string"
        },
        "newMain": {
          "type": "string"
        }
      }
    },
    "chorusSwitchWindow": {
      "type": "object",
      "properties": {
        "startOnInitDone": {
          "type": "boolean",
          "title": "If true, chorus will perform switch automatically when initial migration will be done.\nInitial migration copies all objects that existed in source bucket before replication started.\ndefault is false"
        },
        "cron": {
          "type": "string",
          "description": "If set, chorus will try or retry to execute switch according to CRON schedule until it will be done.\nBucket check and draining work queue is time consuming operation\nso in most cases it is not makes sense to set cron frequency less than one hour\nor less than max_duration if used.\nEither cron or start_at can be set, but not both. If both are set, an error will be returned."
        },
        "startAt": {
          "type": "string",
          "format": "date-time",
          "description": "If set, switch will be executed at given time.\nIf at this point initial migration will not be done, switch will be marked as failed and not executed.\nEither cron or start_at can be set, but not both. If both are set, an error will be returned."
        },
        "maxDuration": {
          "type": "string",
          "description": "If set, chorus will abort switch if it will not be able to complete in given time.\nIn this case, chorus will unblock bucket writes and keep old main as main.\nSwitch will be marked as failed and will be retried on next cron execution if set."
        },
        "maxEventLag": {
          "type": "integer",
          "format": "int64",
          "description": "If set, switch execution will be skipped if number of unprocessed events is more than max_event_lag.\nSwitch will be marked as failed and will be retried on next cron execution if set."
        }
      },
      "description": "Defines downtime window for replication switch.\nAll dates and times depends on local times of machine running chorus worker.\nTime precision is ~1 minute."
    },
    "chorusSwitchWithDowntimeRequest": {
      "type": "object",
      "properties": {
        "replicationId": {
          "$ref": "#/definitions/chorusReplicationRequest"
        },
        "continueReplication": {
          "type": "boolean",
          "title": "set true to replicate data updates from new main to old main bucket after successful switch\ndefault is false"
        },
        "downtimeWindow": {
          "$ref": "#/definitions/chorusSwitchWindow",
          "description": "Configures downtime window for switch. During downtime bucket writes will be blocked on proxy.\nIf NOT set, switch will be performed right away and writes will be blocked until it is done."
        }
      }
    },
    "chorusUserReplication": {
      "type": "object",
      "properties": {
        "user": {
          "type": "string"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    }
  }
}
