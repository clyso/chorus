name: Release Docker images

on:
  # push:
  #   tags:
  #     - '*'
  pull_request:
    branches: [ main ]

jobs:
  # build and publish docker images
  # docker:
  #   strategy:
  #     matrix:
  #       service: [worker, proxy, agent]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #     -
  #       name: Login to Docker Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: harbor.clyso.com
  #         username: "${{ secrets.DOCKER_USER }}"
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #     -
  #       name: Build and push
  #       uses: docker/build-push-action@v5
  #       with:
  #         platforms: linux/amd64,linux/arm64
  #         push: true
  #         tags: |
  #           harbor.clyso.com/chorus/${{ matrix.service }}:${{  github.ref_name }}
  #           harbor.clyso.com/chorus/${{ matrix.service }}:latest
  #         build-args: |
  #           GIT_TAG=${{  github.ref_name }}
  #           GIT_COMMIT=${{ github.sha }} 
  #           SERVICE=${{ matrix.service }} 
  helm:
    # needs: docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: read chart version
        id: chartVer
        uses: mikefarah/yq@v4.9.8
        with:
          cmd: yq '.version' deploy/chorus/Chart.yaml
      - name: Install helm
        uses: azure/setup-helm@v4.2.0
      - name: Publish chart
        run: |
          echo "${{ steps.chartVer.outputs.result }}"
          helm registry login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PASSWORD }} harbor.clyso.com
          helm package ./deploy/chorus --app-version=${{  github.ref_name }}
          helm push ./chorus-${{ steps.chartVer.outputs.result }} oci://harbor.clyso.com/chorus
